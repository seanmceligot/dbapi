// generated 2003/5/16 19:57:35 EDT by sean@blue.localhost.(none)
// using glademm V1.1.0c
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /usr/src/sean/greendb/app/greenapp.glade
// for gtk 1.2.10 and gtkmm 1.2.10
//
// Please modify the corresponding derived classes in ./src/greenWin.cc

#include "config.h"
#include "greenWin.hh"
#include <gtk--/menuitem.h>
#include <gtk--/menu.h>
#include <gtk--/menubar.h>
#include <gtk--/frame.h>
#include <gtk--/entry.h>
#include <gtk--/statusbar.h>
#include <gtk--/box.h>

greenWin_glade::greenWin_glade(
) : Gtk::Window(GTK_WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *greenWin = this;
   Gtk::MenuItem *quit = NULL;
   Gtk::Menu *file_menu = manage(new class Gtk::Menu());
   Gtk::MenuItem *file = NULL;
   Gtk::MenuBar *menubar1 = manage(new class Gtk::MenuBar());
   Gtk::Frame *frame = manage(new class Gtk::Frame());
   Gtk::Entry *cmd_entry = manage(new class Gtk::Entry());
   Gtk::Statusbar *status_bar = manage(new class Gtk::Statusbar());
   Gtk::VBox *vbox = manage(new class Gtk::VBox(false, 0));
   
   file_menu->items().push_back(Gtk::Menu_Helpers::MenuElem("Quit"));
   quit = (Gtk::MenuItem *)file_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("File", *file_menu));
   file = (Gtk::MenuItem *)menubar1->items().back();
   frame->set_shadow_type(GTK_SHADOW_ETCHED_IN);
   frame->set_label_align(0,0);
   cmd_entry->set_flags(GTK_CAN_FOCUS);
   cmd_entry->set_visibility(true);
   cmd_entry->set_editable(true);
   cmd_entry->set_text("");
   vbox->pack_start(*menubar1, false, false, 0);
   vbox->pack_start(*frame);
   vbox->pack_start(*cmd_entry, false, false, 0);
   vbox->pack_start(*status_bar, false, false, 0);
   greenWin->set_title("Green App");
   greenWin->set_modal(false);
   greenWin->set_position(GTK_WIN_POS_NONE);
   greenWin->set_policy(true, true, false);
   greenWin->add(*vbox);
   quit->show();
   file_menu->show();
   file->show();
   menubar1->show();
   frame->show();
   cmd_entry->show();
   status_bar->show();
   vbox->show();
   greenWin->show();
   quit->activate.connect(SigC::slot(static_cast<class greenWin*>(this), &greenWin::on_quit_activate));
   cmd_entry->insert_event.connect(SigC::slot(static_cast<class greenWin*>(this), &greenWin::on_cmd_entry_key_release_event));
   //cmd_entry->key_release_event.connect(SigC::slot(static_cast<class greenWin*>(this), &greenWin::on_cmd_entry_key_release_event));
}

greenWin_glade::~greenWin_glade()
{  
}
