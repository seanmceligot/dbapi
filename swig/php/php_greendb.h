/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.17u-20021128-1508
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

/*
  +----------------------------------------------------------------------+
  | PHP version 4.0                                                      |
  +----------------------------------------------------------------------+
  | Copyright (c) 1997, 1998, 1999, 2000, 2001 The PHP Group             |
  +----------------------------------------------------------------------+
  | This source file is subject to version 2.02 of the PHP license,      |
  | that is bundled with this package in the file LICENSE, and is        |
  | available at through the world-wide-web at                           |
  | http://www.php.net/license/2_02.txt.                                 |
  | If you did not receive a copy of the PHP license and are unable to   |
  | obtain it through the world-wide-web, please send a note to          |
  | license@php.net so we can mail you a copy immediately.               |
  +----------------------------------------------------------------------+
  | Authors:                                                             |
  |                                                                      |
  +----------------------------------------------------------------------+
 */


#ifndef PHP_GREENDB_H
#define PHP_GREENDB_H

extern zend_module_entry greendb_module_entry;
#define phpext_greendb_ptr &greendb_module_entry

#ifdef PHP_WIN32
# define PHP_GREENDB_API __declspec(dllexport)
#else
# define PHP_GREENDB_API
#endif

PHP_MINIT_FUNCTION(greendb);
PHP_MSHUTDOWN_FUNCTION(greendb);
PHP_RINIT_FUNCTION(greendb);
PHP_RSHUTDOWN_FUNCTION(greendb);
PHP_MINFO_FUNCTION(greendb);

ZEND_NAMED_FUNCTION(_wrap_new_GreenDb);
ZEND_NAMED_FUNCTION(_wrap_delete_GreenDb);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open_unknown);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open_queue);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open_recno);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open_hash);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_open_btree);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_dbfile);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_name);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_put);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_fetch);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_cursor);
ZEND_NAMED_FUNCTION(_wrap_GreenDb_close);
ZEND_NAMED_FUNCTION(_wrap_new_GreenEnv);
ZEND_NAMED_FUNCTION(_wrap_delete_GreenEnv);
ZEND_NAMED_FUNCTION(_wrap_GreenEnv_open);
ZEND_NAMED_FUNCTION(_wrap_GreenEnv_close);
ZEND_NAMED_FUNCTION(_wrap_GreenEnv_home);
ZEND_NAMED_FUNCTION(_wrap_new_Datum);
ZEND_NAMED_FUNCTION(_wrap_delete_Datum);
ZEND_NAMED_FUNCTION(_wrap_new_StrDatum);
ZEND_NAMED_FUNCTION(_wrap_StrDatum_type_name);
ZEND_NAMED_FUNCTION(_wrap_delete_StrDatum);
ZEND_NAMED_FUNCTION(_wrap_StrDatum_repr);
ZEND_NAMED_FUNCTION(_wrap_StrDatum_value);
ZEND_NAMED_FUNCTION(_wrap_StrDatum_set_value);
ZEND_NAMED_FUNCTION(_wrap_new_IntDatum);
ZEND_NAMED_FUNCTION(_wrap_IntDatum_type_name);
ZEND_NAMED_FUNCTION(_wrap_delete_IntDatum);
ZEND_NAMED_FUNCTION(_wrap_IntDatum_repr);
ZEND_NAMED_FUNCTION(_wrap_IntDatum_value);
ZEND_NAMED_FUNCTION(_wrap_IntDatum_set_value);
ZEND_NAMED_FUNCTION(_wrap_delete_Cursor);
ZEND_NAMED_FUNCTION(_wrap_Cursor_first);
ZEND_NAMED_FUNCTION(_wrap_Cursor_find);
ZEND_NAMED_FUNCTION(_wrap_Cursor_next);
ZEND_NAMED_FUNCTION(_wrap_Cursor_close);
ZEND_NAMED_FUNCTION(_wrap_new_Cursor);
ZEND_NAMED_FUNCTION(_wrap_new_Row);
ZEND_NAMED_FUNCTION(_wrap_delete_Row);
ZEND_NAMED_FUNCTION(_wrap_Row_close);
ZEND_NAMED_FUNCTION(_wrap_Row_getpk);
ZEND_NAMED_FUNCTION(_wrap_Row_set);
ZEND_NAMED_FUNCTION(_wrap_Row_from_string);
ZEND_NAMED_FUNCTION(_wrap_Row_to_string);
ZEND_NAMED_FUNCTION(_wrap_Row_get_column);
ZEND_NAMED_FUNCTION(_wrap_new_Table);
ZEND_NAMED_FUNCTION(_wrap_Table_get_schema);
ZEND_NAMED_FUNCTION(_wrap_Table_close);
ZEND_NAMED_FUNCTION(_wrap_delete_Table);
ZEND_NAMED_FUNCTION(_wrap_Table_save);
ZEND_NAMED_FUNCTION(_wrap_Table_index);
ZEND_NAMED_FUNCTION(_wrap_Table_fetch);
ZEND_NAMED_FUNCTION(_wrap_Table_get_database);
ZEND_NAMED_FUNCTION(_wrap_Table_cursor);
ZEND_NAMED_FUNCTION(_wrap_Schema_add_column);
ZEND_NAMED_FUNCTION(_wrap_Schema_add_columns);
ZEND_NAMED_FUNCTION(_wrap_Schema_get_type_n);
ZEND_NAMED_FUNCTION(_wrap_Schema_get_type);
ZEND_NAMED_FUNCTION(_wrap_Schema_get_col_no);
ZEND_NAMED_FUNCTION(_wrap_Schema_get_name);
ZEND_NAMED_FUNCTION(_wrap_Schema_size);
ZEND_NAMED_FUNCTION(_wrap_delete_Schema);
ZEND_NAMED_FUNCTION(_wrap_new_Schema);
ZEND_NAMED_FUNCTION(_wrap_TypeMap_get_type_map);
ZEND_NAMED_FUNCTION(_wrap_TypeMap_add_string_convert);
ZEND_NAMED_FUNCTION(_wrap_TypeMap_to_string);
ZEND_NAMED_FUNCTION(_wrap_TypeMap_from_string);
ZEND_NAMED_FUNCTION(_wrap_delete_TypeMap);
ZEND_NAMED_FUNCTION(_wrap_new_TypeMap);
/*If you declare any globals in php_greendb.h uncomment this:
ZEND_BEGIN_MODULE_GLOBALS(greendb)
ZEND_END_MODULE_GLOBALS(greendb)
*/
#ifdef ZTS
#define GREENDB_D  zend_greendb_globals *greendb_globals
#define GREENDB_DC  , GREENDB_D
#define GREENDB_C  greendb_globals
#define GREENDB_CC  , GREENDB_C
#define GREENDB_SG(v)  (greendb_globals->v)
#define GREENDB_FETCH()  zend_greendb_globals *greendb_globals = ts_resource(greendb_globals_id)
#else
#define GREENDB_D
#define GREENDB_DC
#define GREENDB_C
#define GREENDB_CC
#define GREENDB_SG(v)  (greendb_globals.v)
#define GREENDB_FETCH()
#endif

#endif /* PHP_GREENDB_H */
